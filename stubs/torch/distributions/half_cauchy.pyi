from _typeshed import Incomplete
from torch._six import inf as inf
from torch.distributions import constraints as constraints
from torch.distributions.cauchy import Cauchy as Cauchy
from torch.distributions.transformed_distribution import (
    TransformedDistribution as TransformedDistribution,
)
from torch.distributions.transforms import AbsTransform as AbsTransform


class HalfCauchy(TransformedDistribution):
    arg_constraints: Incomplete
    support: Incomplete
    has_rsample: bool
    def __init__(self, scale, validate_args: Incomplete | None = ...) -> None: ...
    def expand(self, batch_shape, _instance: Incomplete | None = ...): ...
    @property
    def scale(self): ...
    @property
    def mean(self): ...
    @property
    def mode(self): ...
    @property
    def variance(self): ...
    def log_prob(self, value): ...
    def cdf(self, value): ...
    def icdf(self, prob): ...
    def entropy(self): ...
