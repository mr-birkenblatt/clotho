from _typeshed import Incomplete


def annotate(ret, **kwargs): ...

class KeyErrorMessage(str): ...

class ExceptionWrapper:
    exc_type: Incomplete
    exc_msg: Incomplete
    where: Incomplete
    def __init__(self, exc_info: Incomplete | None = ..., where: str = ...) -> None: ...
    def reraise(self) -> None: ...

def get_current_device_index() -> int: ...

class _ClassPropertyDescriptor:
    fget: Incomplete
    def __init__(self, fget, fset: Incomplete | None = ...) -> None: ...
    def __get__(self, instance, owner: Incomplete | None = ...): ...

def classproperty(func): ...
