from typing import Any, Callable, Dict

from torch.ao.quantization.quantization_types import Pattern, QuantizerCls


def get_pattern_to_quantize_handlers(backend_config_dict: Dict[str, Any]) -> Dict[Pattern, QuantizerCls]: ...
def get_fusion_pattern_to_fuse_handler_cls(backend_config_dict: Dict[str, Any]) -> Dict[Pattern, Callable]: ...
def get_native_quant_patterns(additional_quant_patterns: Dict[Pattern, QuantizerCls] = ...) -> Dict[Pattern, QuantizerCls]: ...
