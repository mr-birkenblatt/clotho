from typing import Optional

from torch._prims.utils import NumberType, TensorLikeType


def celu(a: TensorLikeType, alpha: Optional[NumberType] = ..., inplace: bool = ...) -> TensorLikeType: ...
def elu(a: TensorLikeType, alpha: Optional[NumberType] = ..., inplace: bool = ...) -> TensorLikeType: ...
def mish(a: TensorLikeType, inplace: bool = ...) -> TensorLikeType: ...
def selu(a: TensorLikeType, inplace: bool = ...) -> TensorLikeType: ...
def softplus(a: TensorLikeType, beta: Optional[NumberType] = ..., threshold: NumberType = ..., inplace: bool = ...) -> TensorLikeType: ...
