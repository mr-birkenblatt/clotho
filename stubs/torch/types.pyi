import builtins
from typing import Union

import torch
from _typeshed import Incomplete


class SymInt: ...
Number = Union[builtins.int, builtins.float, builtins.bool]
Device: Incomplete

class Storage:
    device: torch.device
    dtype: torch.dtype
    def __deepcopy__(self, memo) -> Storage: ...
    def element_size(self) -> int: ...
    def is_shared(self) -> bool: ...
    def share_memory_(self) -> Storage: ...
    def nbytes(self) -> int: ...
    def cpu(self) -> Storage: ...
    def data_ptr(self) -> int: ...
    def from_file(self, filename: str, shared: bool = ..., nbytes: int = ...) -> Storage: ...
